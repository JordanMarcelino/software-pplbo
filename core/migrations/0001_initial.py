# Generated by Django 4.1.7 on 2023-03-23 08:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="man.png",
                        null=True,
                        upload_to="",
                        verbose_name="avatar",
                    ),
                ),
                (
                    "jenis_kelamin",
                    models.CharField(
                        choices=[
                            ("Laki-Laki", "Laki-Laki"),
                            ("Perempuan", "Perempuan"),
                        ],
                        max_length=255,
                        verbose_name="gender",
                    ),
                ),
                (
                    "nik",
                    models.CharField(max_length=255, unique=True, verbose_name="nik"),
                ),
                (
                    "no_telepon",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="no telepon"
                    ),
                ),
                ("alamat", models.CharField(max_length=255, verbose_name="alamat")),
                ("tanggal_lahir", models.DateTimeField()),
                (
                    "golongan_darah",
                    models.CharField(
                        choices=[("O", "O"), ("A", "A"), ("B", "B"), ("AB", "AB")],
                        max_length=10,
                        verbose_name="golongan darah",
                    ),
                ),
                (
                    "agama",
                    models.CharField(
                        choices=[
                            ("Islam", "Islam"),
                            ("Kristen", "Kristen"),
                            ("Katolik", "Katolik"),
                            ("Budha", "Budha"),
                            ("Konghucu", "Konghucu"),
                        ],
                        max_length=50,
                        verbose_name="agama",
                    ),
                ),
                ("is_dokter", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ResetPassword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("confirmation_code", models.CharField(max_length=255)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RekamMedis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("dokter", models.IntegerField()),
                (
                    "keluhan",
                    models.TextField(blank=True, null=True, verbose_name="keluhan"),
                ),
                (
                    "diagnosa",
                    models.TextField(blank=True, null=True, verbose_name="diagnosa"),
                ),
                ("obat", models.TextField(blank=True, null=True, verbose_name="obat")),
                (
                    "riwayat_penyakit",
                    models.TextField(
                        blank=True, null=True, verbose_name="riwayat penyakit"
                    ),
                ),
                (
                    "pasien",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Queue",
            fields=[
                ("nomor", models.IntegerField(auto_created=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("dokter", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pasien",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailConfirmation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("confirmation_code", models.CharField(max_length=255)),
                ("confirmed", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
